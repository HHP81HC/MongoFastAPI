# SonarQube (https://docs.sonarqube.org/latest/)

# Init Curl-Statement
# curl -u SECRET: -d "name=...&project=..." -X POST "https://.../api/projects/create"

# Host URL
sonar.host.url=

# Access token of the team's scan user
sonar.login=

# Project key, has to be unique in a given SonarQube instance, has to match the team's project key pattern
sonar.projectKey=

# Project name and version displayed in the SonarQube UI
sonar.projectName=
sonar.projectVersion=

# Source settings
sonar.python.coverage.reportPaths=./artefacts/coverage/coverage.xml
sonar.python.pylint.reportPaths=./artefacts/linting/pylint_src/pylint.txt
sonar.sources=./src
sonar.sourceEncoding=UTF-8
sonar.exclusions=**/docker_volume/**

# Run Analysis:
## Linux Scanner = https://docs.sonarqube.org/latest/analyzing-source-code/scanners/sonarscanner/
## Windows Scanner = https://docs.sonarqube.org/latest/analyzing-source-code/scanners/sonarscanner/
## Mac Scanner = https://docs.sonarqube.org/latest/analyzing-source-code/scanners/sonarscanner/

## Run Sonar-scanner
# sonar-scanner.bat -Dsonar.branch.name=master -X

## Run coverage
# coverage run --source=src -m pytest
# coverage report -m
# coverage xml -i -o artefacts/coverage/coverage.xml
# coverage html --directory=artefacts/coverage

## Run PyLint
# pylint src --output-format=json:artefacts/linting/pylint_src/pylint.json,text:artefacts/linting/pylint_src/pylint.txt,colorized,parseable
# pylint-json2html -o artefacts/linting/pylint_src/pylint.html artefacts/linting/pylint_src/pylint.json
# pylint tests --output-format=json:artefacts/linting/pylint_tests/pylint.json,text:artefacts/linting/pylint_tests/pylint.txt,colorized
# pylint-json2html -o artefacts/linting/pylint_tests/pylint.html artefacts/linting/pylint_tests/pylint.json
